float ReferenciaAltura = 15; //SetPoint o ReferenciaAltura (altura deseada)
float Erroranterior_1 = 0; //Muestra anterior del Error
float Erroranterior_2 = 0;
float Error = 0; //Muestra Error actual
float controlanterior_1 = 0; //Muestra anterior del control
float controlanterior_2 = 0;
float control_PID = 0; //Muestra actual del control
float ADCVal = 0;
float CicloUtil = 0;
const int Pwm = 10;
const int ts = 600; //TS es 1/10 del tiempo de estabilizacion de la planta.


void setup() {
  pinMode(Pwm, OUTPUT); //Pin 10 para motobomba
  Serial.begin(9600);
}

void loop() {
  ADCVal = analogRead(A0);
  float sensor = ADCVal * (5.0 / 1023.0); //Conversion de ADC a voltaje
  Error = (ReferenciaAltura * 0.048) - sensor; //Calculo del Error
  control_PID = 3.579 * Error - 7.14 * Erroranterior_1 +  3.561 * Erroranterior_2 + controlanterior_2;

  if (control_PID > 1.0) { //Ciclo util maximo (k) no puede valer mas de 1
    control_PID = 1.0;
  }

  if (CicloUtil < 0) {
    CicloUtil = 0;
  }
  if (Error < 0) {
    Error = 0;
  }
  if (control_PID < 0) {
    control_PID = 0;
  }
  CicloUtil = control_PID * 255;
  analogWrite(Pwm, CicloUtil);
  delay(ts);//Periodo de muestreo para control (Ts=0.6s)
  controlanterior_1 = control_PID;
  Erroranterior_1 = Error;
  Erroranterior_2 = Erroranterior_1;
  controlanterior_2 = controlanterior_1;
  Serial.print("Sensor (v):  ");
  Serial.print(sensor);
  Serial.print("      Error ");
  Serial.print(Error);
  Serial.print("      ControlP: ");
  Serial.print(control_PID);
  Serial.print("      Altura: ");
  Serial.print(ADCVal / 10);
  Serial.print(" cm ");
  Serial.print("      PWM: ");
  Serial.println(CicloUtil);
}